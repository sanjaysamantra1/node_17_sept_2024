	
To transform the array:
	reduce(func, initial) – calculate a single value over the array by calling func for 	each element and passing an intermediate result between the calls.
	flat()   - creates a new array with the elements of the subarrays concatenated into it.flat(Infinity) , flat() also removes holes in array
	flatMap() - maps each element in an array using a mapping function and then flattens the results into a new array
	
To iterate over elements:
	forEach()	– calls func for every element, does not return anything.
	
	
Additionally:
	Array.isArray(arr) checks arr for being an array.
	Array.from()  change array-like or iterable into true array
	Array.of()  create array from every arguments passed into it.


Array Clone/Copy
================
1. Reference Copy / Address Copy : 
	 let arr2 = arr1;
	-new array is not being created, the same array address is copied to another variables
2.shallow copy : value copy
	-only top level values are copied by value
	-inner arrays are copied by address
	let arr2 = [...arr1]; // shallow copy - copy by value
3. deep copy : value copy
    -everything including nested arrays are copied by value
	-let arr2 = structuredClone(arr1)