How to use Express
==================
1. import express
   const express = require('express')
2. create an instance of express.
   const app = express()
3. use methods
   app.get(route, callback)
   app.post(route, callback)


Express Methods
===============
app.get()
app.post()
app.put()
app.patch()
app.delete()
app.listen()
app.use()
app.all()



app.use() vs app.get()
======================
-app.use() is generally used for introducing middlewares and can handle all type of HTTP requests.
-app.get() is only for handling GET HTTP requests.


app.use() vs app.all()
======================
app.use() will only see whether url starts with specified path.
app.all() will match the complete path.

app.use( "/book" , middleware);
// will match /book
// will match /book/author
// will match /book/subject

app.all( "/book" , handler);
// will match /book
// won't match /book/author   
// won't match /book/subject    

app.all( "/book/*" , handler);
// won't match /book        
// will match /book/author
// will match /book/subject



Express.js Request Object Properties
====================================
req.app
req.body
req.cookies
req.hostname
req.ip
req.method
req.params
req.path
req.protocol
req.query



Response methods
================
The methods on the response object (res) in the following table can send a response to the client, and terminate the request-response cycle. If none of these methods are called from a route handler, the client request will be left hanging.

Method	Description
res.send()	Send a response of various types. (Buffer / JSON / HTML / String)
res.end()	End the response process.
res.json()	Send a JSON response.
res.jsonp()	Send a JSON response with JSONP support.
res.redirect()	Redirect a request.
res.render()	Render a view template.
res.sendFile()	Send a file as an octet stream.
res.download()	Prompt a file to be downloaded.
res.sendStatus()	Set the response status code and send its string representation as the response body.


Status() vs sendStatus()
========================
res.sendStatus(200); // equivalent to res.status(200).send('OK') 
res.sendStatus(403); // equivalent to res.status(403).send('Forbidden')
res.sendStatus(404); // equivalent to res.status(404).send('Not Found') 
res.sendStatus(500); // equivalent to res.status(500).send('Internal Server Error')


